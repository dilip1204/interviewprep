package com.learn.thread;

import java.awt.List;
import java.util.ArrayList;

class Processor{
	
	
	private List list = new ArrayList
			();
	private final int LIMIT=5;
	private final int BOTTOM=0;
	private Object lock = new Object();
	
	public void produce()throws InterruptedException{
		
		synchronized (lock) {
			while(true) {
				if(list )
			}
			
		}
		
	}
	
	public void consume()throws InterruptedException {
		
	}
}
public class ProducerConsumer {
	
	public static void main(String[] args) {
		
		static Processor p = new Processor();
		
		
		Thread t1 = new Thread(new Runnable() {
			
			@Override
			public void run() {
				try {
					p.produce();
				} catch (InterruptedException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
			}
		});
	
		Thread t2 = new Thread(new Runnable() {
			
			@Override
			public void run() {
				try {
					p.consume();
				} catch (InterruptedException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
			}
		});
	t1.start();
	t2.start();
	
	try {
		t1.join();
		t2.join();
	} catch (InterruptedException e) {
		// TODO Auto-generated catch block
		e.printStackTrace();
	}
	}
	
	

}
